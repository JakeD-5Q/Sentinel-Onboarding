{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/edaae2f3-cb4f-4d5a-b4b1-a7b1c69f3b3f')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/edaae2f3-cb4f-4d5a-b4b1-a7b1c69f3b3f')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "properties": {
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                    "groupByEntities": [],
                    "groupByAlertDetails": null,
                    "groupByCustomDetails": null
                }
            },
            "queryFrequency": "PT1H",
            "queryPeriod": "P14D",
            "triggerOperator": "GreaterThan",
            "triggerThreshold": 0,
            "eventGroupingSettings": {
                "aggregationKind": "SingleAlert"
            },
            "severity": "Medium",
            "query": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nlet emailregex = @'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$';\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n//Filtering the table for Email related IOCs\n| where isnotempty(EmailRecipient)\n| join (\n    SigninLogs | where TimeGenerated >= ago(dt_lookBack) and isnotempty(UserPrincipalName)\n    //Normalizing the column to lower case for exact match with EmailRecipient column\n    | extend UserPrincipalName = tolower(UserPrincipalName)\n    | where UserPrincipalName matches regex emailregex\n    | extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\n    | extend Region = tostring(LocationDetails[\"countryOrRegion\"]), State = tostring(LocationDetails[\"state\"]), City = tostring(LocationDetails[\"city\"])\n    // renaming timestamp column so it is clear the log this came from SigninLogs table\n    | extend SigninLogs_TimeGenerated = TimeGenerated\n)\non $left.EmailRecipient == $right.UserPrincipalName\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, SigninLogs_TimeGenerated,\nEmailSenderName, EmailSourceDomain, EmailSourceIpAddress, EmailSubject, FileHashValue, FileHashType, IPAddress, UserPrincipalName, AppDisplayName,\nStatusCode, StatusDetails, NetworkIP, NetworkDestinationIP, NetworkSourceIP\n| extend timestamp = SigninLogs_TimeGenerated, AccountCustomEntity = UserPrincipalName, IPCustomEntity = IPAddress, URLCustomEntity = Url",
            "suppressionDuration": "PT5H",
            "suppressionEnabled": false,
            "tactics": [
                "Impact"
            ],
            "displayName": "(Preview) TI map Email entity to SigninLogs",
            "enabled": true,
            "description": "Identifies a match in SigninLogs table from any Email IOC from TI",
            "alertRuleTemplateName": "30fa312c-31eb-43d8-b0cc-bcbdfb360822"
        },
        "apiVersion": "2021-09-01-preview"
    }
]
}

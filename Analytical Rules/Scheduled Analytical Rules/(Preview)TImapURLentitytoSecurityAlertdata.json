{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/270e2a2a-2e64-4909-a27c-45a62aed1923')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/270e2a2a-2e64-4909-a27c-45a62aed1923')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "properties": {
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "AllEntities",
                    "groupByEntities": [],
                    "groupByAlertDetails": null,
                    "groupByCustomDetails": null
                }
            },
            "queryFrequency": "PT1H",
            "queryPeriod": "P14D",
            "triggerOperator": "GreaterThan",
            "triggerThreshold": 0,
            "eventGroupingSettings": {
                "aggregationKind": "SingleAlert"
            },
            "severity": "Medium",
            "query": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(Url)\n| join (\n  SecurityAlert\n  | where TimeGenerated >= ago(dt_lookBack)\n  // Extract URL from JSON data\n  | extend Url = extract(\"(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\\\(\\\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+)\", 1,Entities)\n  // We only want alerts that actually contain URL data\n  | where isnotempty(Url)\n  // Extract hostname from JSON data for entity mapping\n  | extend Compromised_Host = tostring(parse_json(ExtendedProperties).[\"Compromised Host\"])\n  | extend Alert_TimeGenerated = TimeGenerated\n) on Url\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Alert_TimeGenerated,\nAlertName, AlertSeverity, Description, Url, Compromised_Host\n| extend timestamp = Alert_TimeGenerated, HostCustomEntity = Compromised_Host, URLCustomEntity = Url",
            "suppressionDuration": "PT5H",
            "suppressionEnabled": false,
            "tactics": [
                "Impact"
            ],
            "displayName": "(Preview) TI map URL entity to SecurityAlert data",
            "enabled": true,
            "description": "Identifies a match in SecurityAlert data from any URL IOC from TI",
            "alertRuleTemplateName": "f30a47c1-65fb-42b1-a7f4-00941c12550b"
        },
        "apiVersion": "2021-09-01-preview"
    }
]
}
